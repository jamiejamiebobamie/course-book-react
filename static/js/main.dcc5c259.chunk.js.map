{"version":3,"sources":["actions/index.js","reducers/course-book-reducer.js","reducers/index.js","components/AddCourse.js","components/ListCourses.js","components/ShowCourses.js","components/AddStudent.js","components/ListStudents.js","components/PickStudent.js","components/ShowCourse.js","components/Header.js","components/ShowPairs.js","components/ShowResults.js","components/App.js","utils/index.js","serviceWorker.js","index.js"],"names":["addCourse","courseName","type","payload","selectCourse","courseId","addStudent","studentName","pickStudent","removeCourse","index","removeStudent","student","pairStudents","makeCourse","name","students","studentPool","studentPairs","currentStudent","courseBookReducer","state","courses","selectedCourse","action","course","newCourseName","trim","undefined","newCourse","coursesCopy","newState","indexOf","newStudents","newPool","length","randomArray","splice","random","newCourses","newSelectedCourse","filter","randomStudents","newPairs","pair","push","reducers","combineReducers","courseBook","AddCourse","props","this","setState","className","placeholder","value","onChange","e","target","onClick","addNewCourse","Component","connect","Object","keys","map","i","key","courseCount","AddStudent","addNewStudent","Header","ShowPairs","pairs","console","log","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","subscribe","stringify","setItem","saveState","getState","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dcc5c259.chunk.js","sourcesContent":["export const ADD_COURSE = 'ADD_COURSE'\nexport const SELECT_COURSE = 'SELECT_COURSE'\nexport const ADD_STUDENT = 'ADD_STUDENT'\nexport const SELECT_STUDENT = 'SELECT_STUDENT'\nexport const PICK_STUDENT = 'PICK_STUDENT'\nexport const REMOVE_COURSE = 'REMOVE_COURSE'\nexport const PAIR_STUDENTS = 'PAIR_STUDENTS'\nexport const REMOVE_STUDENT = 'REMOVE_STUDENT'\n\nexport const addCourse = (courseName) => {\n  return {\n    type: ADD_COURSE, \n    payload: courseName\n  }\n}\n\nexport const selectCourse = (courseId) => {\n  return {\n    type: SELECT_COURSE,\n    payload: courseId\n  }\n} \n\nexport const addStudent = (studentName) => {\n  return {\n    type: ADD_STUDENT,\n    payload: studentName\n  }\n}\n\nexport const pickStudent = () => {\n  return {\n    type: PICK_STUDENT\n  }\n}\n\nexport const removeCourse = (index) => {\n  return {\n    type: REMOVE_COURSE,\n    payload: index\n  }\n}\n\nexport const removeStudent = (student) => {\n  return {\n    type: REMOVE_STUDENT,\n    payload: student\n  }\n} \n\nexport const pairStudents = () => {\n  return {\n    type: PAIR_STUDENTS\n  }\n}\n","import { ADD_COURSE, SELECT_COURSE, ADD_STUDENT, PICK_STUDENT, REMOVE_COURSE, REMOVE_STUDENT, PAIR_STUDENTS } from '../actions'\nimport { random, randomArray } from 'really-random'\n\nconst defaultState = () => {\n  return {\n    courses: {}, \n    selectedCourse: ''\n  }\n}\n\nconst makeCourse = (name) => {\n  return {\n    name, \n    students: [],\n    studentPool: [],\n    studentPairs: [],\n    currentStudent: ''\n  }\n}\n\nconst courseBookReducer = (state = defaultState(), action) => {\n  const { type, payload } = action\n  const { courses, selectedCourse } = state\n  const course = courses[selectedCourse]\n\n  if (type === ADD_COURSE) {\n    // ADD Course \n    const newCourseName = payload.trim()\n    if (courses[newCourseName] !== undefined) {\n      return state\n    }\n    const newCourse = makeCourse(newCourseName)\n    const coursesCopy = { ...courses }\n    coursesCopy[newCourseName] = newCourse\n\n    return { ...state, courses: coursesCopy }\n\n  } else if (type === SELECT_COURSE) {\n    // * SELECT Course\n    const newState = { ...state, selectedCourse: payload } \n    return newState\n\n  } else if (type === ADD_STUDENT) {\n    // ADD Student\n    const studentName = payload.trim()\n    const { students } = course\n    \n    // Avoid dudplicate name\n    if (students.indexOf(studentName) !== -1) {\n      return state\n    }\n\n    // Add new student\n    const newStudents = [ ...students, studentName ]\n    const newState = { ...state }\n    newState.courses[selectedCourse].students = newStudents\n   \n    return newState\n\n  } else if (type === PICK_STUDENT) {\n    // * PICK Student\n    const { students, studentPool } = course\n    let newPool\n\n    if (studentPool.length === 0) {\n      // shuffle students and fill pool\n      newPool = [ ...randomArray(students) ]\n    } else {\n      newPool = [ ...studentPool ]\n    }\n\n    // select random student and remove them from pool\n    const student = newPool.splice(random(studentPool.length), 1)[0]\n    const newState = { ...state }\n    newState.courses[selectedCourse].currentStudent = student\n    newState.courses[selectedCourse].studentPool = newPool\n\n    return newState\n\n  } else if (type === REMOVE_COURSE) {\n    // * REMOVE Course\n    const newCourses = { ...courses }\n    delete newCourses[payload]\n    const newSelectedCourse = selectedCourse === payload ? '' : selectedCourse\n    return { ...state, selectedCourse: newSelectedCourse, courses: newCourses }\n\n  } else if (type === REMOVE_STUDENT) {\n    // * REMOVE Student\n    const studentName = payload.trim()\n    const { students, studentPool } = courses[selectedCourse]\n    const newStudents = students.filter( student => student !== studentName)\n    const newPool = studentPool.filter( student => student !== studentName)\n    const newState = { ...state }\n    newState.courses[selectedCourse].students = newStudents\n    newState.courses[selectedCourse].studentPool = newPool\n\n    return newState \n\n  } else if (type === PAIR_STUDENTS) {\n    // * PAIR Students \n    const { students } = course\n    const randomStudents = randomArray(students)\n    const newPairs = []\n    while(randomStudents.length > 0) {\n      const pair = randomStudents.splice(0, 1)\n      if (randomStudents.length > 0) {\n        pair.push(randomStudents.splice(0, 1)[0])\n      }\n      newPairs.push(pair)\n    }\n\n    const newCourse = { ...course, studentPairs: newPairs }\n    const newState = { ...state }\n    newState.courses[selectedCourse] = newCourse\n\n    return newState\n\n  } else {\n    return state\n  }\n}\n\nexport default courseBookReducer","import { combineReducers } from 'redux'\nimport courseBookReducer from './course-book-reducer'\n\nconst reducers = combineReducers({\n  courseBook: courseBookReducer\n})\n\nexport default reducers","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { addCourse } from '../actions'\n\nimport './AddCourse.css'\n\nclass AddCourse extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name:''\n    }\n  }\n\n  addNewCourse() {\n    this.props.addCourse(this.state.name)\n    this.setState({ name: '' })\n  }\n\n  render() {\n    return (\n      <div className=\"AddCourse\">\n        <input\n          type=\"text\"\n          placeholder=\"Add a course\"\n          value={this.state.name}\n          onChange={(e) => {\n            this.setState({ name: e.target.value })\n          }}\n        />\n        <button\n          className=\"add-remove\"\n          onClick={(e) => {\n            this.addNewCourse()\n          }}\n        >&#x2b;</button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ courseBook }) => {\n  return {\n\n  }\n} \n\nconst mapDispatchToProps = () => {\n  return {\n    addCourse\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps())(AddCourse)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { selectCourse, removeCourse } from '../actions'\n\nimport './ListCourses.css'\n\nfunction ListCourses(props) {\n  const courses = props.courses.map((course, i) => {\n    return (\n      <div \n        key={`${course}-${i}`}\n        className=\"group-list-item\"\n      >\n        <button\n          className=\"select-list\"\n          onClick={() => {\n            props.selectCourse(course)\n          }}\n        >\n          {course}\n        </button>\n        <button\n          className=\"add-remove\"\n          onClick={() => {\n            props.removeCourse(course)\n          }}\n        >&#x2212;</button>\n      </div>\n    )\n  })\n  return (\n    <div className=\"ListCourses\">\n      {courses}\n    </div>\n  )\n}\n\nconst mapStateToProps = ({courseBook}) => {\n  const courses = Object.keys(courseBook.courses)\n  return {\n    courses\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return {\n    selectCourse,\n    removeCourse\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps())(ListCourses)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport AddCourse from './AddCourse'\nimport ListCourses from './ListCourses'\n\nimport './ShowCourses.css'\n\nfunction ShowCourses(props) {\n  return (\n    <div className=\"column-content\">\n      <h2>Courses</h2>\n      <p>Course:{props.courseCount}</p>\n      <AddCourse />\n      <ListCourses />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  const { courses } = state.courseBook\n  const keys = Object.keys(courses)\n  return {\n    courses: keys\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return {\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps())(ShowCourses)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { addStudent } from '../actions'\n\nimport './AddStudent.css'\n\nclass AddStudent extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name:''\n    }\n  }\n\n  addNewStudent() {\n    this.props.addStudent(this.state.name)\n    this.setState({ name: '' })\n  }\n\n  render() {\n    return (\n      <div className=\"AddStudent\">\n        <input\n          type=\"text\"\n          placeholder=\"Add Student\"\n          value={this.state.name}\n          onChange={(e) => {\n            this.setState({ name: e.target.value })\n          }}\n        />\n        <button\n          className=\"add-remove\"\n          onClick={(e) => {\n            this.addNewStudent()\n          }}\n        >&#x2b;</button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ courseBook }) => {\n  return {\n\n  }\n} \n\nconst mapDispatchToProps = () => {\n  return {\n    addStudent\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps())(AddStudent)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { removeStudent } from '../actions'\n\nimport './ListStudents.css'\n\nfunction ListStudents(props) {\n  if (props.students.length === 0) {\n    return <p>No students</p>\n  }\n\n  const students = props.students.map((student, i) => {\n    return (\n      <div\n        className=\"group-list-item\"\n        key={`${student}-${i}`}\n      >\n        <button\n          className=\"select-list\"\n          key={`${student}-${i}`}\n          onClick={() => {\n\n          }}\n        >\n          {student}\n        </button>\n        <button\n        className=\"add-remove\"\n        onClick={(e) => {\n          props.removeStudent(student)\n        }}\n      >&#x2212;</button>\n    </div>\n    )\n  })\n\n  return (\n    <div className=\"ListStudents\">\n      {students}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  const { selectedCourse, courses } = state.courseBook\n  const { students } = courses[selectedCourse]\n\n  return {\n    students\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return {\n    removeStudent\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps())(ListStudents)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { pickStudent, pairStudents } from '../actions'\n\nimport './PickStudent.css'\n\nfunction PickStudent(props) {\n  return (\n    <div className=\"PickStudent\">\n      <button\n        onClick={() => {\n          props.pickStudent()\n        }}\n      >Pick Student</button>\n\n      <button\n        onClick={() => {\n          props.pairStudents()\n        }}\n      >Pair Student</button>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n\n  }\n}\n\nconst mapDipsatchToProps = () => {\n  return {\n    pickStudent,\n    pairStudents\n  }\n}\n\nexport default connect(mapStateToProps, mapDipsatchToProps())(PickStudent)","import React from 'react'\nimport { connect } from 'react-redux'\nimport AddStudent from './AddStudent'\nimport ListStudents from './ListStudents'\nimport PickStudent from './PickStudent'\n\nimport './ShowCourse.css'\n\nfunction ShowCourse(props) {\n  if (props.name === '') {\n    return (\n      <div className=\"ShowCourse\">\n        <h2>Select a course</h2>\n      </div>  \n    )\n  }\n\n  return (\n    <div className=\"ShowCourse\">\n      <h2>{props.name}</h2>\n      <p>students:{props.students.length}</p>\n      <PickStudent />\n      <AddStudent />\n      <ListStudents />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  const { selectedCourse, courses } = state.courseBook\n  if (selectedCourse === '') {\n    return { name: '' }\n  }\n\n  const { name, students } = courses[selectedCourse]\n\n  return {\n    name,\n    students\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return {\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps())(ShowCourse)","import React from 'react'\n\nfunction Header() {\n  return (\n    <div>\n      <h1>CourseBook</h1>\n    </div>\n  )\n}\n\nexport default Header","import React from 'react'\n\nfunction ShowPairs(props) {\n  if (props.pairs === undefined) {\n    return null\n  }\n  const pairs = props.pairs.map((pair, i) => {\n    return (\n      <div key={`pair-${i}`}>\n        <p>\n          <span>{pair[0]}</span>\n          &#160; &#8213; &#160;\n          <span>{pair[1]}</span>\n        </p>\n      </div>\n    )\n  })\n  return (\n    <div>\n      <h2>Pairs</h2>\n      {pairs}\n    </div>\n  )\n}\n\nexport default ShowPairs","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport ShowPairs from './ShowPairs'\n\nimport './ShowResults.css'\n\nfunction ShowResults(props) {\n  return (\n    <div className=\"ShowResults\">\n      <h2>Results</h2>\n      <p>{props.currentStudent}</p>\n      <ShowPairs pairs={props.studentPairs} />\n    </div>\n  )\n} \n\nconst mapStateToProps = (state) => {\n  const { selectedCourse, courses } = state.courseBook\n  console.log(selectedCourse)\n\n  if (selectedCourse === '') {\n    return { currentStudent: '' }\n  }\n\n  const course = courses[selectedCourse]\n  const { currentStudent, studentPairs } = course\n\n  return {\n    currentStudent, \n    studentPairs\n  }\n}\n\nexport default connect(mapStateToProps)(ShowResults)","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducers from '../reducers'\nimport { loadState, saveState } from '../utils'\nimport ShowCourses from './ShowCourses'\nimport ShowCourse from './ShowCourse'\nimport Header from './Header'\nimport ShowResults from './ShowResults'\n\nimport './App.css';\n\nconst persistedState = loadState()\nconst store = createStore(reducers, persistedState)\nstore.subscribe(() => {\n  saveState(store.getState())\n})\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header />\n        <div className=\"content\">\n          <ShowCourses />\n          <ShowCourse />\n          <ShowResults />\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const COURSE_BOOK_STATE = \"COURSE_BOOK_STATE\"\n\n// Load State\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(COURSE_BOOK_STATE)\n    if (serializedState === null) {\n      return undefined\n    }\n    return JSON.parse(serializedState)\n  } catch(err) {\n    return undefined\n  }\n}\n\n// Save State\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem(COURSE_BOOK_STATE, serializedState)\n  } catch(err) {\n    console.log(\"Error saving data\")\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}